var request = require('request');
var async = require('async');

var outgoingRequests = {

}

var flightStatsAPIs = {
  appId : 'c3e78334',
  appKey : '9df9ca2a00f1d0c467e62b8d6ac0ea50',
  utc: true,
  codeType : 'IATA',
  statusAPI : 'https://api.flightstats.com/flex/flightstatus/rest/v2/json/airport/status/'
}

var timeLogic = {
  withoutCarrierCode : {
    numberOfSubrequests : 2,
    subrequests : [{adjustTime : -4, timeWindow : 3}, {adjustTime : 4, timeWindow : 4}]
  },
  withCarrierCode : {
    numberOfSubrequests : 4,
    subrequests : [{adjustTime : -12, timeWindow : 6}, {adjustTime : 6, timeWindow : 6}, {adjustTime : 6, timeWindow : 6}, {adjustTime : 6, timeWindow : 6}]
  }
};

function getStatusById (id) {
  return outgoingRequests[id].status;
}

function getResultsById (id) {
  return outgoingRequests[id].results;
}

function urlMaker (api, iata, type, date, hour, appId, appKey, timeWindow, utc, codeType, carrierCode) {
  if(carrierCode) {
    var url = api + iata + '/' + type + '/' + date + hour + '?appId=' + appId + 
  '&appKey=' + appKey +'&' + 'numHours=' + timeWindow + '&utc=' + utc + '&codeType=' + codeType + '&carrierCode' + carrierCode;
  } else {
    var url = api + iata + '/' + type + '/' + date + hour + '?appId=' + appId + 
    '&appKey=' + appKey +'&' + 'numHours=' + timeWindow + '&utc=' + utc + '&codeType=' + codeType;
  }
  return url;
}

function FlightStatsApiRequestInfo() {
  this.id = Math.floor((Math.random() * 1000) + 1);
  this.status = 'sent';
  this.doneSubrequests = 0;
  this.urls = [];
  this.results = [];
  this.setNumberOfSubrequests = function(number) {
    this.numberOfRequests = number;
  };
  this.countDoneSubrequests = function(number) {
    this.doneSubrequests += number;
  };
  this.setStatus = function(status) {
    this.status = status;
  }
  this.pushResult = function(result) {
    this.results.push(result);
  }
}

function sendFlightStatsApiRequest (url, id) {

  request(url, function (error, response, body) {
    if (!error && response.statusCode == 200) {
      var result = JSON.parse(response.body);
      outgoingRequests[id].pushResult(result);
      outgoingRequests[id].countDoneSubrequests(1);
      if(outgoingRequests[id].doneSubrequests === outgoingRequests[id].numberOfRequests) {
        outgoingRequests[id].setStatus('done')
      }
    } else {
      console.log(error);
    }
  });
}

function sendFlightStatsApiRequests(id) {
  var asyncTasks = [];
  outgoingRequests[id].urls.forEach(function (item) {
    asyncTasks.push(function(callback) {
      sendFlightStatsApiRequest(item,id);
      callback();
    });
  });

  async.parallel(asyncTasks, function(err){
    if (err) return err;
    }); 
}

function createFlightStatsApiRequest (data) {
  function requestWithoutCarrierCode (data) {
    var logic = timeLogic.withoutCarrierCode;
    //creating info object
    var bigRequestInfo = new FlightStatsApiRequestInfo();
    bigRequestInfo.setNumberOfSubrequests(logic.numberOfSubrequests)
    bigRequestInfo.urls = prepareRequestsUrls(logic, data);
    outgoingRequests[bigRequestInfo.id] = bigRequestInfo;
    return bigRequestInfo.id;
  }

  function requestWithCarrierCode () {
    var logic = timeLogic.withCarrierCode;
    var bigRequestInfo = new FlightStatsApiRequestInfo();
    bigRequestInfo.setNumberOfSubrequests(logic.numberOfSubrequests)
    bigRequestInfo.urls = prepareRequestsUrls(logic, data);
    outgoingRequests[bigRequestInfo.id] = bigRequestInfo;
    return bigRequestInfo.id;
  }


  // Logic to choose needed function
  if (data.carrierCode) {
    var id = requestWithCarrierCode(data);
    return id;
  } else {
    var id = requestWithoutCarrierCode(data);
    return id;
  }
}

function prepareRequestsUrls (logic, data) {
  var dateObj = new Date();
  var tempUrlsArray = [];
  for (i = 0; i < logic.subrequests.length; i++) { 
    dateObj.setUTCHours(dateObj.getUTCHours() + logic.subrequests[i].adjustTime);
    var dateStr = dateObj.getUTCFullYear() + '/' + (dateObj.getUTCMonth()+ 1) + '/' + dateObj.getUTCDate()+ '/';
    if(data.carrierCode){
      tempUrlsArray.push(urlMaker(flightStatsAPIs.statusAPI, data.iataCode, data.type, dateStr, dateObj.getUTCHours(), flightStatsAPIs.appId,
      flightStatsAPIs.appKey, logic.subrequests[i].timeWindow , flightStatsAPIs.utc, flightStatsAPIs.codeType, data.carrierCode));
    } else {
      tempUrlsArray.push(urlMaker(flightStatsAPIs.statusAPI, data.iataCode, data.type, dateStr, dateObj.getUTCHours(), flightStatsAPIs.appId,
      flightStatsAPIs.appKey, logic.subrequests[i].timeWindow , flightStatsAPIs.utc, flightStatsAPIs.codeType));
    }
  }
  return tempUrlsArray;
}
  
module.exports.createFlightStatsApiRequest = createFlightStatsApiRequest;
module.exports.sendFlightStatsApiRequests = sendFlightStatsApiRequests;
module.exports.getStatusById = getStatusById;
module.exports.getResultsById = getResultsById;
